// Generated by BUCKLESCRIPT VERSION 3.1.4, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var ReactDOMRe = require("reason-react/src/ReactDOMRe.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var ReactSimpleMaps = require("react-simple-maps");

function make(disablePanning, center, children) {
  return ReasonReact.wrapJsForReason(ReactSimpleMaps.ZoomableGroup, {
              disablePanning: disablePanning,
              center: center
            }, children);
}

var ZoomableGroup = /* module */[/* make */make];

function make$1(geography, children) {
  return ReasonReact.wrapJsForReason(ReactSimpleMaps.Geographies, {
              geography: geography
            }, children);
}

var Geographies = /* module */[/* make */make$1];

function make$2(geography, projection, children) {
  return ReasonReact.wrapJsForReason(ReactSimpleMaps.Geographie, {
              geography: geography,
              projection: projection
            }, children);
}

var Geography = /* module */[/* make */make$2];

function make$3(children) {
  return ReasonReact.wrapJsForReason(ReactSimpleMaps.ComposableMap, { }, children);
}

var ComposableMap = /* module */[/* make */make$3];

ReactDOMRe.renderToElementWithId(ReasonReact.element(/* None */0, /* None */0, make$3(/* array */[ReasonReact.element(/* None */0, /* None */0, make(true, /* tuple */[
                        0,
                        20
                      ], /* array */[ReasonReact.element(/* None */0, /* None */0, make$1("https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/examples/basic-map/static/world-50m.json", /* array */[(function (geographies, _) {
                                      return $$Array.mapi((function (_, i) {
                                                    return ReasonReact.element(/* Some */["geography-" + i], /* None */0, make$2("", "", /* array */[]));
                                                  }), geographies);
                                    })]))]))])), "index1");

exports.ZoomableGroup = ZoomableGroup;
exports.Geographies = Geographies;
exports.Geography = Geography;
exports.ComposableMap = ComposableMap;
/*  Not a pure module */
